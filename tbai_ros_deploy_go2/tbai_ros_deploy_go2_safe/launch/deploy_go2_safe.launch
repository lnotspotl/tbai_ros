<?xml version="1.0" encoding="utf-8"?>
<launch>
    <!-- Required arguments -->
    <arg name="controllers_ns"              default="anymal_d"/>
    <arg name="controllers_args"            default="joint_controller"/>
    <arg name="tbai_config_path"            default="$(find tbai_ros_deploy_go2_safe)/config/deploy_go2_safe.yaml"/>
    <arg name="description_name"            default="robot_description"/>
    <arg name="description_file"            default="$(find ocs2_robotic_assets)/resources/go2/urdf/go2_description.urdf"/>
    <arg name="network_interface"           default="eth0"/>
    <arg name="run_rviz"                    default="false"/>
    <arg name="run_virtual_joystick"        default="false"/>
    <arg name="run_go2_joystick"            default="true"/>
    <arg name="safe_node"                   default="true"/>
    <arg name="use_mppi"                    default="false"/>

    <!-- Upload config path to ROS param server -->
    <param name="tbai_config_path" type="string" value="$(arg tbai_config_path)"/>

    <!-- Set environment variable for config path -->
    <env name="TBAI_GLOBAL_CONFIG_PATH" value="$(arg tbai_config_path)"/>

    <!-- Set environment variable for robot description path -->
    <env name="TBAI_ROBOT_DESCRIPTION_PATH" value="$(arg description_file)"/>
    
    <!-- Set environment variable for network interface -->
    <env name="TBAI_GO2_NETWORK_INTERFACE" value="$(arg network_interface)"/>

    <param name="$(arg description_name)" command="$(find xacro)/xacro --inorder $(arg description_file)" />

    <!-- Launch simple node -->
    <node name="deploy_go2_safe" pkg="tbai_ros_deploy_go2_safe" type="deploy_go2_safe" output="screen"/>

    <!-- Launch virtual joystick -->
    <group if="$(arg run_virtual_joystick)">
        <node name="virtual_joystick" pkg="tbai_ros_safe" type="virtual_joystick.py" output="screen"/>
    </group>

    <group if="$(arg run_go2_joystick)">
        <node name="go2_joystick_node" pkg="tbai_ros_deploy_go2_safe" type="go2_joystick_node" output="screen"/>
    </group>

    <!-- Start Rviz visualizer -->
    <group if="$(arg run_rviz)">
        <arg name="rvizconfig" default="$(find tbai_ros_deploy_go2_safe)/launch/rviz/deploy_go2_safe.rviz" />
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rvizconfig)" output="screen" />
    </group>

    <!-- Launch safe node -->
    <node name="tbai_safe_node" pkg="tbai_ros_deploy_go2_safe" type="tbai_safe_node_naive.py" output="screen" if="$(arg safe_node)">
        <param name="use_mppi" value="$(arg use_mppi)"/>
    </node>

</launch>
